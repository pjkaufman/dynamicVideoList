{% extends 'videos.html.twig' %}

{% block videoList %}
{% endblock %}
{% block languageList %}
{% endblock %}

{% block content %}
{# Setup the videoLists #}
{% if page.header.videoList is defined %}
  {% if page.header.videoListConfig is defined and page.header.videoListConfig == false %}
    {% set videoLists =  attribute(page.header, page.header.listContainer) %}
  {% else %}
    {% set videoLists = attribute(configFile, page.header.listContainer) %}
  {% endif %}
{% endif %}
{# Determine where to get the initial video list from #}
{% if page.header.languageListConfig is defined and page.header.languageListConfig == false %}
  {% set languages = page.header.languages %}
{% else %}
  {% set languages = configFile.languages %}
{% endif %}
{% set videos = attribute(videoLists, page.header.defaultList) %}
{% set languageLists = languages %}
{% set languages = attribute(attribute(languageLists, page.header.defaultList), grav.language.getActive) %}
{{ parent() }}
{% endblock %}
{% block videoSelect %}
  <div id="videoListOptions">
    <p>Select a Video List: </p>
    <div class="select">
      <select id="videoLists">
        {% for list in page.header.videoList %}
          <option value="{{ list }}">{{ list }}</option>
        {% endfor %}
      </select>
    </div>
  </div>
  {{ parent() }}
{% endblock %}
{% block inlineScript %}
<script>
  Window.Vinya = {
    defLang: '{{~grav.language.getActive~}}',
    errorMsg: '{{ error }}',
    localKey: '{{ page.header.pageIdentifier }}',
    videoList: {},
    languageLists: {},
    functions: {},
    URLParams: {
      lang: "lang", 
      title: "video", 
      time: "time",
      sub: "sub",
      list: "list"
    },
    defaultList: '{{ page.header.defaultList }}'
  };
  {% for list in page.header.videoList %}
    Object.assign(Window.Vinya.videoList, {'{{ list }}': {}});
    Object.assign(Window.Vinya.languageLists, {'{{ list }}': {}});
    {% for language in attribute(attribute(languageLists, list), grav.language.getActive) %}
      Object.assign(Window.Vinya.languageLists['{{ list }}'], { '{{ language.code }}' : '{{language.name}}'});
    {% endfor %}
    {% for video in attribute(videoLists, list) %}
      Object.assign(Window.Vinya.videoList['{{ list }}'], {'{{ video.name }}': {} });
      Object.assign(Window.Vinya.videoList['{{ list }}']['{{ video.name }}'], { title: '{{ attribute(video.title, grav.language.getActive) }}' });
      {% for id in video.ids %}
        Object.assign(Window.Vinya.videoList['{{ list }}']['{{ video.name }}'], { {{ id.language }}: {{ id.id }}});
      {% endfor %}
    {% endfor %}
  {% endfor %}
  // this function runs itself
  (function(){
    var lastParams = localStorage.getItem(Window.Vinya.localKey);
    // add the appropriate params to the website if they exist
    if (lastParams != undefined && window.location.search === '' && !window.location.href.includes(lastParams)) {
     window.location.search = lastParams;
    }
    var tempURL = new URL(window.location.href);
    if (!tempURL.searchParams.has(Window.Vinya.URLParams.lang)) {
      tempURL.searchParams.append(Window.Vinya.URLParams.lang, Window.Vinya.defLang);
      // update the browser history
      if (history.pushState) {
        window.history.pushState({path:window.location.href},'',tempURL.href);
      }
    }
  })();
</script>
{% endblock %}

{% block javascriptFunctions %}
  {% do assets.addJs('theme://js/videoListsPlayer.min.js', {priority: 106, loading: 'defer', position: 'before'}) %}
{% endblock %}